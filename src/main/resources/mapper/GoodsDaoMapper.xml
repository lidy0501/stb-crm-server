<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.stb.stbcrmserver.dao.GoodsDao">
    <select id="queryAllGoods" resultType="cn.stb.stbcrmserver.domain.Goods">
        select goods_id, goods_code, goods_name, goods_price, sku_id,create_time, update_time, remark
        from CRM_GOODS
        where goods_state = '1'
        order by update_time desc
    </select>

    <insert id="addGoods" parameterType="cn.stb.stbcrmserver.domain.Goods">
        insert into
        CRM_GOODS(goods_id,goods_code,goods_name,goods_price,sku_id,operator_id,remark)
        values
        (#{goodsId},#{goodsCode},#{goodsName},#{goodsPrice},#{skuId},#{operatorId},#{remark})
    </insert>

    <update id="deleteGoodsById" parameterType="java.util.Map">
        update CRM_GOODS
        set goods_state= '0', operator_id = #{operatorId}
        where goods_id = #{goodsId}
    </update>

    <insert id="addSku" parameterType="java.util.List">
        insert into CRM_SKU(sku_id, sku_code, sku_unit, sku_color, operator_id, remark)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.skuId},
            #{item.skuCode},
            #{item.skuUnit},
            #{item.skuColor},
            #{item.operatorId},
            #{item.remark}
            )
        </foreach>
    </insert>

    <update id="updateSku" parameterType="cn.stb.stbcrmserver.domain.Sku">
        update CRM_SKU
        set sku_code=#{skuCode},
            sku_unit=#{skuUnit},
            sku_color=#{skuColor},
            operator_id=#{operatorId}
        where sku_id=#{sku_id}
    </update>

    <update id="deleteSkuById" parameterType="java.util.Map">
        update CRM_SKU set sku_state = '0', operator_id = #{operatorId}
        where sku_id = #{skuId}
    </update>

    <select id="selectGoodsBySkuId" parameterType="java.lang.String" resultType="cn.stb.stbcrmserver.domain.Goods">
        select goods_id, goods_code, goods_name, goods_price, sku_id, create_time, update_time, remark
        from CRM_GOODS
        where goods_state = '1' and sku_id=#{skuId}
    </select>

    <select id="querySkuList" resultType="cn.stb.stbcrmserver.domain.Sku">
        select sku_id, sku_code, sku_unit, sku_color, sku_state, operator_id, remark
        from CRM_SKU
        where sku_state = '1'
    </select>

    <select id="findGoodsByCode" parameterType="java.lang.String" resultType="cn.stb.stbcrmserver.domain.Goods">
        select goods_id, goods_code, goods_name, goods_price, sku_id, create_time, update_time, remark
        from CRM_GOODS
        where goods_state = '1' and goods_code=#{goodsCode}
    </select>

    <select id="querySkuListByIds" parameterType="java.util.List" resultType="cn.stb.stbcrmserver.domain.Sku">
        select sku_id, sku_code, sku_unit, sku_color, sku_state, operator_id, remark
        from CRM_SKU
        where sku_id in
        <foreach collection="list"  open="("  item="item" separator="," close=")">
            #{item}
        </foreach>
    </select>


    <select id="queryAllSelectGoodsVo" resultType="cn.stb.stbcrmserver.vo.SelectGoodsVo">
        select g.goods_id, g.goods_name, g.goods_price, s.sku_unit, s.sku_color
        from CRM_GOODS g left join CRM_SKU s on g.sku_id = s.sku_id
        where g.goods_state = '1'
    </select>

    <select id="queryOrderGoodsByGoodsId" parameterType="java.lang.String" resultType="cn.stb.stbcrmserver.domain.OrderGoods">
        SELECT ORDER_ID, GOODS_ID, AMOUNT, STATE, OPERATOR_ID, CREATE_TIME, UPDATE_TIME
        WHERE GOODS_ID = #{goodsId}
        AND STATE = '1'
    </select>

    <select id="queryGoodsByGoodsIds" parameterType="java.util.List" resultType="cn.stb.stbcrmserver.domain.Goods">
        select goods_id, goods_code, goods_name, goods_price, sku_id, create_time, update_time, remark
        from CRM_GOODS
        where goods_id in
        <foreach collection="list"  open="("  item="item" separator="," close=")">
            #{item}
        </foreach>
    </select>
    
</mapper>